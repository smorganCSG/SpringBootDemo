apiVersion: v1
kind: Template
metadata:
  annotations:
    description: |-
      Template for creating the S2I Spring Boot App. 
  name: 53-s2i-spring-boot
objects:
- kind: BuildConfig
  apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    labels:
      build: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      binary: {}
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
- kind: ImageStream
  apiVersion: v1  
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewBuild
    creationTimestamp: null
    generation: 1
    labels:
      build: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    lookupPolicy:
      local: false  
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    generation: 1
    labels:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - image: ${APP_NAME}:latest
          imagePullPolicy: IfNotPresent
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health/
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange 
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    ports:
    - name: ${APP_NAME}
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME} 
      deploymentconfig: ${APP_NAME} 
    sessionAffinity: None
    type: ClusterIP

- kind: Route
  apiVersion: v1
  metadata:
    name: ${APP_NAME}
    labels:
      app: ${APP_NAME}
    annotations:
      template.openshift.io/expose-uri: "http://{.spec.host}{.spec.path}"
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APP_NAME}
      weight: 100    
parameters:
- description: Name of web services application.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: helloworld
